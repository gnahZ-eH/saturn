/*
 * MIT License
 *
 * Copyright (c) [2020] [He Zhang]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished
 *  to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.github.saturn.odata.annotations;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * <p>Annotation for a EDM/CSDL EntityType element.</p>
 * <p>EdmEntityType holds a set of related information like EdmPrimitiveType, EdmComplexType
 * and EdmNavigation properties.</p>
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface ODataEntityType {

    /**
     * Define the name for the EDM EntityType.
     * If not set a default value has to be generated by the EDM provider, the name of the class is used.
     *
     * @return The name of the entity type.
     */
    String name() default "";

    /**
     * Define the namespace for the EDM EntityType.
     * If not set a default value has to be generated by the EDM provider, the name of the package that contains
     * the entity class is used.
     *
     * @return namespace for the EDM EntityType
     */
    String namespace() default "";

    /**
     * The key of the entity, consisting of an array of the names of properties that form the key. This attribute is
     * provided for convenience, which can be used instead of the more verbose {@code keyRef}. An entity must have a
     * key which consists of at least one of the properties of the entity; either {@code key} or {@code keyRef} must
     * be specified on an entity.
     *
     * @return The key of the entity.
     */
    String[] keys() default { };

}
